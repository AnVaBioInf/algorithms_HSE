# -*- coding: utf-8 -*-
"""ДЗ1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_LzV3uHDumWjW4tafa_AMbChCZNfnuHy

Задача 1
Для выполнения задания использован пакет scipy.stats, функция beta. Функция задана как в учебнике beta.pdf(x, a, b) = gamma(a+b)/(gamma(a)*gamma(b)) * x**(a-1) *(1-x)**(b-1)

https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.binom.html
"""

import numpy as np
from scipy.stats import beta
import matplotlib.pyplot as plt
#
# Plot the beta distribution
#
a1,b1 = 4,4
x1 = np.linspace(beta.ppf(0.0, a1, b1),beta.ppf(1, a1, b1), 100) 
#beta.pdf(x, a, b) = gamma(a+b)/(gamma(a)*gamma(b)) * x**(a-1) *(1-x)**(b-1)

a2,b2 = 3,9
x2 = np.linspace(beta.ppf(0.0, a2, b2),beta.ppf(1, a2, b2), 100) 

plt.figure(figsize=(7,7))
plt.xlim(0, 1)
plt.ylim(0, 3.5)
plt.title('Бета распределение вероятностей вероятности получить \n заданную последовательность', fontsize='15')
plt.xlabel('X', fontsize='15')
plt.ylabel('PDF', fontsize='15')

plt.plot(x1, beta.pdf(x1, a1, b1), 'r-', label="Априорная вероятность")
plt.plot(x2, beta.pdf(x2, a2, b2), 'g-', label="Апостериорная вероятность")
plt.legend()

plt.show()

"""Задача 2

https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.gamma.html
"""

from scipy.special import gamma, factorial
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import quad

x = np.linspace(0, 100, 1000)

def f_apr(x,a=5,b=1/6):
  return (b**a*x**(a-1)*np.exp(-b*x) / (factorial(a-1)))

def f_apost_num(x,a=5,b=1/6,N=33,M=4):
  return x**(N+a-1)*np.exp(-(M+b)*x)

f_apost_den = quad(func=f_apost_num, a=0, b=np.inf)[0]
print(quad(func=f_apost_num, a=0, b=np.inf)[0])


plt.title('Гамма распределение уровня экспрессии гена лямбда', fontsize='15')
plt.xlabel('Уровень экспрессии', fontsize='15')
plt.ylabel('PDF', fontsize='15')


plt.plot(x, f_apr(x), color='red', label="Априорная вероятность")
plt.plot(x, f_apost_num(x)/f_apost_den, color='green', label="Апостериорная вероятность")
plt.legend()

plt.show()

from scipy.special import gamma, factorial
import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import quad


def f_apost_num(x,a=5,b=1/6,N=33,M=4):
  return x**(N+a-1)*np.exp(-(M+b)*x)

f_apost_den = quad(func=f_apost_num, a=0, b=np.inf)[0]
print(quad(func=f_apost_num, a=0, b=np.inf)[0])

x = np.linspace(0, 70, 100)
print(f_apost_num(x)/f_apost_den)

plt.plot(x, f_apost_num(x)/f_apost_den, color='green')

plt.show()



